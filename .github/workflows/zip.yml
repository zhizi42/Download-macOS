name: Generate ZIP

on:
  workflow_dispatch:
    inputs:
      macos_version:
        type: choice
        description: "macOS Version"
        required: true
        options:
          - Ventura v13.5.1
          - Monterey v12.7
          - Big Sur v11.7.9
          - Catalina v10.15.7
          - Mojave v10.14.6
          - High Sierra v10.13.6
          - Sonoma Beta v14.0

jobs:
  build-zip:
    runs-on: macos-latest
    if: github.repository == 'Comp-Labs/Download-macOS'
    steps:
      - uses: actions/checkout@v3

      # MARK: macOS Version

      - if: github.event.inputs.macos_version == 'Ventura v13.5.1'
        name: Download macOS Ventura Latest
        run: |
          sudo "/System/Library/PrivateFrameworks/Seeding.framework/Versions/Current/Resources/seedutil" enroll DeveloperSeed
          sleep 5
          softwareupdate --fetch-full-installer --full-installer-version 13.5.1

      - if: github.event.inputs.macos_version == 'Monterey v12.7'
        name: Download macOS Monterey Latest
        run: |
          sudo "/System/Library/PrivateFrameworks/Seeding.framework/Versions/Current/Resources/seedutil" enroll DeveloperSeed
          sleep 5
          softwareupdate --fetch-full-installer --full-installer-version 12.7

      - if: github.event.inputs.macos_version == 'Big Sur v11.7.9'
        name: Download macOS Big Sur Latest
        run: |
          sudo "/System/Library/PrivateFrameworks/Seeding.framework/Versions/Current/Resources/seedutil" enroll DeveloperSeed
          sleep 5
          softwareupdate --fetch-full-installer --full-installer-version 11.7.9

      - if: github.event.inputs.macos_version == 'Catalina v10.15.7'
        name: Download macOS Catalina Latest
        run: |
          sudo "/System/Library/PrivateFrameworks/Seeding.framework/Versions/Current/Resources/seedutil" enroll DeveloperSeed
          sleep 5
          softwareupdate --fetch-full-installer --full-installer-version 10.15.7

      - if: github.event.inputs.macos_version == 'Mojave v10.14.6'
        name: Download macOS Mojave Latest
        run: |
          sudo "/System/Library/PrivateFrameworks/Seeding.framework/Versions/Current/Resources/seedutil" enroll DeveloperSeed
          sleep 5
          softwareupdate --fetch-full-installer --full-installer-version 10.14.6

      - if: github.event.inputs.macos_version == 'High Sierra v10.13.6'
        name: Download macOS High Sierra Latest
        run: |
          sudo "/System/Library/PrivateFrameworks/Seeding.framework/Versions/Current/Resources/seedutil" enroll DeveloperSeed
          sleep 5
          softwareupdate --fetch-full-installer --full-installer-version 10.13.6

      - if: github.event.inputs.macos_version == 'Sonoma Beta v14.0'
        name: Download macOS Sonoma Beta Latest
        run: |
          sudo "/System/Library/PrivateFrameworks/Seeding.framework/Versions/Current/Resources/seedutil" enroll DeveloperSeed
          sleep 5
          softwareupdate --fetch-full-installer --full-installer-version 14.0

      - if: github.event.inputs.macos_version == 'Monterey Beta v12.5'
        name: Download macOS MontereyBeta Latest
        run: |
          sudo "/System/Library/PrivateFrameworks/Seeding.framework/Versions/Current/Resources/seedutil" enroll DeveloperSeed
          sleep 5
          softwareupdate --fetch-full-installer --full-installer-version 12.5

      # Ventura

      - if: github.event.inputs.macos_version == 'Ventura v13.5.1'
        name: ZIP and Upload
        run: |
          cd /Applications
          zip -r "Install macOS Ventura.zip" "Install macOS Ventura.app"
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: macOS Ventura
          path: "/Applications/Install macOS Ventura.zip"

      # Monterey

      - if: github.event.inputs.macos_version == 'Monterey v12.7'
        name: ZIP and Upload
        run: |
          cd /Applications
          zip -r "Install macOS Monterey.zip" "Install macOS Monterey.app"
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: macOS Monterey
          path: "/Applications/Install macOS Monterey.zip"

      # Big Sur

      - if: github.event.inputs.macos_version == 'Big Sur v11.7.9'
        name: ZIP and Upload
        run: |
          cd /Applications
          zip -r "Install macOS Big Sur.zip" "Install macOS Big Sur.app"
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: macOS Big Sur
          path: "/Applications/Install macOS Big Sur.zip"

      # Catalina

      - if: github.event.inputs.macos_version == 'Catalina v10.15.7'
        name: ZIP and Upload
        run: |
          cd /Applications
          zip -r "Install macOS Catalina.zip" "Install macOS Catalina.app"
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: macOS Catalina
          path: "/Applications/Install macOS Catalina.zip"

      # Mojave

      - if: github.event.inputs.macos_version == 'Mojave v10.14.6'
        name: ZIP and Upload
        run: |
          cd /Applications
          zip -r "Install macOS Mojave.zip" "Install macOS Mojave.app"
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: macOS Mojave
          path: "/Applications/Install macOS Mojave.zip"

      # High Sierra

      - if: github.event.inputs.macos_version == 'High Sierra v10.13.6'
        name: ZIP and Upload
        run: |
          cd /Applications
          zip -r "Install macOS High Sierra.zip" "Install macOS High Sierra.app"
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: macOS High Sierra
          path: "/Applications/Install macOS High Sierra.zip"

      # Sonoma Beta

      - if: github.event.inputs.macos_version == 'Sonoma Beta v14.0'
        name: ZIP and Upload
        run: |
          cd /Applications
          zip -r "Install macOS Sonoma beta.zip" "Install macOS Sonoma beta.app"
      - uses: actions/upload-artifact@v3.1.0
        with:
          name: macOS Sonoma Beta
          path: "/Applications/Install macOS Sonoma beta.zip"

  re-run-failed-jobs:
    runs-on: ubuntu-latest
    needs: [build-zip]
    if: always() && (needs.build-zip.result == 'failure')
    steps:
      - name: Needs Context
        env:
          NEEDS_CONTEXT: ${{ toJSON(needs) }}
        run: |
          echo "$NEEDS_CONTEXT"
